name: Build and Deploy Code

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mypassword123
          POSTGRES_DB: fastapi
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set environment variables
        run: |
          echo "DATABASE_USERNAME=postgres" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=mypassword123" >> $GITHUB_ENV
          echo "DATABASE_HOSTNAME=localhost" >> $GITHUB_ENV
          echo "DATABASE_PORT=5432" >> $GITHUB_ENV
          echo "DATABASE_NAME=fastapi" >> $GITHUB_ENV
          echo "SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7" >> $GITHUB_ENV
          echo "ALGORITHM=HS256" >> $GITHUB_ENV
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> $GITHUB_ENV

      - name: Create test database
        run: |
          psql -h localhost -U postgres -c "CREATE DATABASE fastapi_test;"
        env:
          PGPASSWORD: mypassword123

      - name: Run tests with pytest
        run: |
          pip install pytest
          pytest -v

  docker:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image (optimized)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fastapi:latest
            ${{ secrets.DOCKER_USERNAME }}/fastapi:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/fastapi:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/fastapi:buildcache,mode=max
